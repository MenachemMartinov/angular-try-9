{"version":3,"sources":["./src/app/services/customer.service.ts","./src/app/components/dashboard/messages-to-user/messages-to-user.component.ts","./src/app/components/dashboard/messages-to-user/messages-to-user.component.html","./src/environments/environment.ts","./src/app/components/auth/login/login.component.ts","./src/app/components/auth/login/login.component.html","./src/app/components/customers/my-cards/my-cards.component.ts","./src/app/components/customers/my-cards/my-cards.component.html","./src/app/components/auth/page-not-fund/page-not-fund.component.ts","./src/app/components/auth/page-not-fund/page-not-fund.component.html","./src/app/components/dashboard/side-nav/side-nav.component.ts","./src/app/components/dashboard/side-nav/side-nav.component.html","./src/app/components/dashboard/header/header.component.ts","./src/app/components/dashboard/header/header.component.html","./src/app/components/dashboard/container/container.component.ts","./src/app/components/dashboard/container/container.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/guards/auth.guard.ts","./src/app/services/cord.service.ts","./src/app/app.module.ts","./src/app/components/auth/subscribe/subscribe.component.ts","./src/app/components/auth/subscribe/subscribe.component.html","./src/app/directives/log-out.directive.ts","./src/app/components/customers/profile/profile.component.ts","./src/app/components/customers/profile/profile.component.html","./src/app/services/auth.service.ts","./src/app/components/customers/profile-edit/profile-edit.component.ts","./src/app/components/customers/profile-edit/profile-edit.component.html","./src/app/components/customers/cards/cards.component.ts","./src/app/components/customers/cards/cards.component.html","./src/app/components/customers/new-cards/new-cards.component.ts","./src/app/components/customers/new-cards/new-cards.component.html","./src/app/components/customers/edit-cards/edit-cards.component.ts","./src/app/components/customers/edit-cards/edit-cards.component.html","./src/app/app-routing.module.ts","./src/app/components/dashboard/footer/footer.component.ts","./src/app/components/dashboard/footer/footer.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable, Injector } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Customer } from '../interface/customer';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CustomerService {\n  // the user id end user token\n  token: string = '';\n  id: string = '';\n\n  customerObservable$: Observable<Customer> = null;\n\n  // go to AuthService\n  authService = null;\n  constructor(private http: HttpClient, private injector: Injector) {\n    this.authService = injector.get(AuthService);\n    this.getToken();\n  }\n\n  getToken() {\n    this.token = '';\n    this.id = '';\n    this.token = window.localStorage.getItem('token');\n\n    if (!this.id) {\n      return console.log('error', this.id);\n    }\n  }\n\n  async getCustomerInfo() {\n    await this.authService.getToken();\n\n    const headers = new HttpHeaders()\n      .set('auth-token', `${this.authService.token}`)\n      .set('Authorization', 'my-auth-token')\n      .set('Content-Type', 'application/json');\n    this.customerObservable$ = this.http.get<Customer>(\n      `${this.authService.basicUrl}/users/user-details`,\n      { headers: headers }\n    );\n  }\n\n  // update user\n  update(valid, value) {\n    if (valid) {\n      //  headers\n      const headers = new HttpHeaders()\n        .set('auth-token', `${this.token}`)\n        .set('Authorization', 'my-auth-token')\n        .set('Content-Type', 'application/json');\n      this.http\n        .put<Customer>(\n          `${this.authService.basicUrl}/users/${this.authService.id}`,\n          JSON.stringify(value),\n          {\n            headers: headers,\n          }\n        )\n        .subscribe(console.log);\n    }\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-messages-to-user',\n  templateUrl: './messages-to-user.component.html',\n  styles: [\n  ]\n})\nexport class MessagesToUserComponent implements OnInit {\n\n  @Input() icon: string = '';\n  @Input() title: string = '';\n  @Input() description: string = '';\n  @Input() name: string = ''\n  constructor() {}\n  \n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row mt-5\">\n  <div class=\"col-12\">\n    <div class=\"jumbotron pt-3 pb-3\">\n      <h3><i *ngIf=\"icon\" [ngClass]=\"icon\"></i> {{ title | titlecase }}</h3>\n      <p class=\"lead\">\n        {{ description }}\n      </p>\n    </div>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { CustomerLogin } from 'src/app/interface/customerLogin';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styles: [],\n})\nexport class LoginComponent implements OnInit {\n  // first reset form\n  form: CustomerLogin = {\n    id: '',\n    email: '',\n    password: '',\n  };\n\n  // import the services what need for this component\n  constructor(private router: Router, private authService: AuthService) {\n    if (window.localStorage.getItem('token')) {\n      // login automatic with the local storage \"token\"\n      this.authService.getTokenEndNavigate();\n    }\n  }\n\n  // send the form on submit\n  onSubmit({ valid, value }: NgForm) {\n    // go to function what send the value from auth service\n    this.authService.login(valid, value);\n  }\n\n  ngOnInit(): void {}\n}\n","<app-messages-to-user\n  icon=\"fas fa-sign-in-alt\"\n  title=\"form login\"\n  description=\"her you login to her services\"\n></app-messages-to-user>\n\n<div class=\"row\">\n  <div class=\"col-12\">\n    <form\n      #customerForm=\"ngForm\"\n      (ngSubmit)=\"onSubmit(customerForm)\"\n      novalidate=\"novalidate\"\n\n    >\n      <div class=\"row justify-content-center\">\n        <div class=\"col-md-5 mb-3\">\n          <label for=\"email\"> <span class=\"text-danger\">*</span> Email </label>\n          <input\n            type=\"email\"\n            #e=\"ngModel\"\n            name=\"email\"\n            [(ngModel)]=\"form.email\"\n            id=\"email\"\n            class=\"form-control\"\n            required\n            pattern=\"^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$\"\n            [ngClass]=\"{\n              'is-valid': e.touched && e.valid,\n              'is-invalid': e.touched && e.invalid\n            }\"\n            autocomplete=\"email\"\n          />\n          <div *ngIf=\"e.errors?.required\" class=\"invalid-feedback\">\n            Email is required\n          </div>\n          <div *ngIf=\"e.errors?.pattern\" class=\"invalid-feedback\">\n            Please enter a valid email address\n          </div>\n        </div>\n\n        <div class=\"col-md-5 mb-3\">\n          <label for=\"password\"> <span class=\"text-danger\">*</span> Password </label>\n          <input\n            type=\"password\"\n            #password=\"ngModel\"\n            name=\"password\"\n            [(ngModel)]=\"form.password\"\n            id=\"password\"\n            class=\"form-control\"\n            required\n            minlength=\"6\"\n            [ngClass]=\"{\n              'is-valid': password.touched && password.valid,\n              'is-invalid': password.touched && password.invalid\n            }\"\n            autocomplete=\"current-password\"\n          />\n          <div *ngIf=\"e.errors?.required\" class=\"invalid-feedback\">\n            Password is required\n          </div>\n          <div *ngIf=\"e.errors?.pattern\" class=\"invalid-feedback\">\n            Please enter a valid Password address\n          </div>\n        </div>\n      </div>\n\n      <div class=\"alert-primary p-3 text-center\">\n        <a routerLink=\"/subscribe\" class=\"btn btn-secondary\">subscribe</a>\n        <a routerLink=\"/login\" class=\"btn btn-secondary\">Cancel</a>\n\n        <input\n          type=\"submit\"\n          [disabled]=\"customerForm.form.invalid\"\n          value=\"Log in\"\n          class=\"btn btn-primary ml-3\"\n        />\n      </div>\n    </form>\n  </div>\n</div>\n\n\n<div>\n  <pre></pre>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Cards } from 'src/app/interface/cards';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { CordService } from 'src/app/services/cord.service';\n\n@Component({\n  selector: 'app-my-cards',\n  templateUrl: './my-cards.component.html',\n  styleUrls: ['./my-cards.component.scss']\n})\nexport class MyCardsComponent implements OnInit {\n\n  // id for link\n  customerId: string = '';\n\n  // for subscribe to get all cards\n  allCards: Cards[] = [];\n  constructor(\n    private cardService: CordService,\n    private authService: AuthService\n  ) {\n    this.allCards = []\n    this.cardService.getMyCards();\n    this.customerId = this.authService.id;\n    console.log(this.allCards);\n    console.log(this.authService.token);\n    console.log(this.cardService.token);\n\n  }\n\n  ngOnInit(): void {\n    // subscribe to get the cards\n    if (this.cardService.allCardsObservable$) {\n      this.cardService.allCardsObservable$.subscribe((data) => {\n        console.log(data);\n        console.log(this.allCards)\n        this.allCards = data;\n      });\n    }\n  }\n\n}\n","<app-messages-to-user\n  icon=\"far fa-address-card\"\n  title=\"form subscribe\"\n  description=\"her you subscribe to her services\"\n></app-messages-to-user>\n\n<div class=\"row mt-3\">\n  <div class=\"col-12\">\n    <div *ngIf=\"allCards; else loading\">\n      <div class=\"row\">\n        <div\n          class=\"card col-3 p-2 m-3\"\n          style=\"width: 18rem\"\n          *ngFor=\"let cards of allCards; index as idx\"\n        >\n          <img [src]=\"cards.bizImage\" class=\"card-img-top\" alt=\"...\" />\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">Card title</h5>\n            <p class=\"card-text\">\n              {{ cards.bizDescription }}\n            </p>\n          </div>\n          <ul class=\"list-group list-group-flush\">\n            <li class=\"list-group-item\">{{ cards.bizName | titlecase }}</li>\n            <li class=\"list-group-item\">{{ cards.bizPhone | titlecase }}</li>\n            <li class=\"list-group-item\">{{ cards.bizAddress | titlecase }}</li>\n          </ul>\n          <div class=\"card-body\">\n            <a\n              routerLink=\"/dashboard/{{ customerId }}/cards/{{\n                cards._id\n              }}/edit-card\"\n              class=\"card-link\"\n              >Card edit</a\n            >\n          </div>\n        </div>\n      </div>\n      <ng-template #noCustomers>\n        <p><i>No customers...</i></p>\n      </ng-template>\n    </div>\n\n    <ng-template #loading> loading... </ng-template>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-page-not-fund',\n  templateUrl: './page-not-fund.component.html',\n  styles: [],\n})\nexport class PageNotFundComponent implements OnInit {\n  // is logged to know what button t6o show\n  isLogged: boolean = false;\n\n  // import the services what need for this component\n  constructor(private authService: AuthService) {\n    // change the is logged to true or false\n    this.isLogged = this.authService.isLogged;\n  }\n\n  ngOnInit(): void {}\n}\n","<app-messages-to-user\n  icon=\"fas fa-sign-in-alt\"\n  title=\"page not fund\"\n  description=\"page not fund\"\n></app-messages-to-user>\n\n<div *ngIf=\"isLogged === false; else isLogged\">\n  <a routerLink=\"/subscribe\" class=\"btn btn-secondary\">subscribe</a>\n  <a routerLink=\"/login\" class=\"btn btn-secondary\">login</a>\n</div>\n\n<ng-template #isLogged>\n  <a class=\"btn btn-secondary\" appLogOut >Log Out</a>\n  <a routerLink=\"\" class=\"btn btn-secondary\">home</a>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport { NavItem } from 'src/app/interface/NavItem';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { CordService } from 'src/app/services/cord.service';\n\n@Component({\n  selector: 'app-side-nav',\n  templateUrl: './side-nav.component.html',\n  styleUrls: ['./side-nav.component.scss'],\n})\nexport class SideNavComponent implements OnInit {\n  navItems: NavItem[] = [\n    {\n      title: 'profile',\n      icon: 'fas fa-flag',\n      link: `/dashboard/${this.authService.id}/profile`,\n    },\n    {\n      title: 'profile edit',\n      icon: 'fas fa-flag',\n      link: `/dashboard/${this.authService.id}/profile/edit`,\n    },\n    {\n      title: 'all-cards',\n      icon: 'fas fa-flag',\n      link: `/dashboard/${this.authService.id}/cards/all-cards`,\n    },\n    {\n      title: 'my-cards',\n      icon: 'fas fa-flag',\n      link: `/dashboard/${this.authService.id}/cards/my-cards`,\n    },\n    {\n      title: 'new-cards',\n      icon: 'fas fa-flag',\n      link: `/dashboard/${this.authService.id}/cards/new-cards`,\n    },\n    {\n      title: 'edit-cards',\n      icon: 'fas fa-hand-point-up',\n      link: `/dashboard/${this.authService.id}/cards/${this.cardServices.cardId}/edit-card`,\n    },\n    {\n      title: 'pageNotFund',\n      icon: 'fas fa-hand-point-up',\n      link: '/pageNotFund',\n    },\n  ];\n\n  constructor(\n    private authService: AuthService,\n    private cardServices: CordService\n  ) {}\n\n  ngOnInit(): void {}\n}\n","<ul class=\"nav flex-column pt-4 sticky-top\" *ngIf=\"navItems; else notWork\">\n  <li *ngFor=\"let item of navItems\" class=\"pl-4\">\n    <a\n      [routerLink]=\"item.link\"\n      routerLinkActive=\"active\"\n      class=\"nav-link text-white \"\n    >\n      <i *ngIf=\"item.icon\" [ngClass]=\"[item.icon]\"></i>\n      <span class=\"ml-3\">{{ item.title }}</span>\n    </a>\n  </li>\n</ul>\n<ng-template #notWork>\n  loading...\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styles: [],\n})\nexport class HeaderComponent implements OnInit {\n  user: any;\n  _$ = '    ';\n  constructor(private authService: AuthService) {\n    this.user = this.authService.user;\n  }\n\n  ngOnInit(): void {}\n}\n","<nav class=\"navbar navbar-expand-sm navbar-dark bg-primary p-0 m-0\">\n  <a class=\"navbar-brand\" routerLink=\"#\">\n    My <i class=\"fas fa-angle-double-up\"></i> CRM\n  </a>\n  <button\n    class=\"navbar-toggler\"\n    type=\"button\"\n    data-toggle=\"collapse\"\n    data-target=\"#navbarsExample03\"\n    aria-controls=\"navbarsExample03\"\n    aria-expanded=\"false\"\n    aria-label=\"Toggle navigation\"\n  >\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div class=\"collapse navbar-collapse\" id=\"navbarsExample03\">\n    <ul class=\"navbar-nav ml-auto\">\n      <li class=\"nav-item dropdown\">\n        <a\n          class=\"nav-link dropdown-toggle\"\n          id=\"dropdown03\"\n          data-toggle=\"dropdown\"\n          aria-haspopup=\"true\"\n          aria-expanded=\"false\"\n        >\n          <i class=\"fas fa-user\"></i> {{ user.name }}\n        </a>\n        <div\n          class=\"dropdown-menu dropdown-menu-laft\"\n          aria-labelledby=\"dropdown03\"\n        >\n          <a class=\"dropdown-item\">\n            <i class=\"fas fa-user-cog\"></i> My Preferences\n          </a>\n          <a class=\"dropdown-item\" appLogOut>\n            <i class=\"fas fa-sign-out-alt\"></i> Log Out\n          </a>\n        </div>\n      </li>\n    </ul>\n  </div>\n  <div>\n    <pre>{{ _$ }}</pre>\n  </div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-container',\n  templateUrl: './container.component.html',\n  styleUrls: ['./container.component.scss']\n})\nexport class ContainerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<header class=\"container-fluid p-0 m-0 sticky-top zIndex\">\n  <div class=\"row\">\n\n    <app-header class=\"col-12\"></app-header>\n  </div>\n</header>\n\n<main class=\"container-fluid p-0 m-0\">\n  <div class=\"row\">\n    <div class=\"col-2 p-0 height-me bg-primary sticky-left\">\n      <app-side-nav></app-side-nav>\n    </div>\n    <div class=\"col-10 p-0 m-0\">\n      <div class=\"row\">\n        <div class=\"col-11\">\n          <router-outlet></router-outlet>\n        </div>\n        <div class=\"col-1 m-0 p-0\">\n          <div class=\"height-me bg-primary sticky-right m-0 p-0\"></div>\n        </div>\n      </div>\n    </div>\n  </div>\n</main>\n\n<footer class=\"container-fluid p-0 m-0 sticky-botten\">\n  <app-footer></app-footer>\n</footer>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'client';\n}\n","<router-outlet></router-outlet>\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    if (state.url === '/') {\n      if (this.authService.isLogged === true) {\n        return this.router.createUrlTree([\n          '/dashboard',\n          this.authService.id,\n          'profile',\n        ]);\n      }\n\n      return true;\n    }\n\n    if (state.url === '/subscribe') {\n      if (this.authService.isLogged === true) {\n        return this.router.createUrlTree([\n          '/dashboard',\n          this.authService.id,\n          'profile',\n        ]);\n      }\n\n      return true;\n    }\n\n    if (this.authService.isLogged === true) {\n      return true;\n    }\n\n    if (\n      state.url === '/login' ||\n      state.url === '/subscribe' ||\n      state.url === '/pageNotFund'\n    ) {\n      return true;\n    }\n\n    return this.router.createUrlTree(['/login']);\n  }\n\n  constructor(private router: Router, private authService: AuthService) {}\n}\n","import { HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Cards } from '../interface/cards';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CordService {\n  // all cards observable\n  allCardsObservable$: Observable<any> = null;\n\n  // card observable\n  cardObservable$: Observable<Cards> = null;\n\n  // card id end users token\n  cardId: string = '';\n  token: string = '';\n\n  // get the token\n  getToken() {\n    this.token = window.localStorage.getItem('token');\n  }\n\n  constructor(private router: Router, private authService: AuthService) {\n    this.getToken()\n  }\n\n\n\n  // new card\n  newCard(valid, value) {\n    if (valid) {\n      const headers = new HttpHeaders()\n      .set('auth-token', `${this.token}`)\n      .set('Authorization', 'my-auth-token')\n      .set('Content-Type', 'application/json');\n      this.authService.http\n        .post(\n          `${this.authService.basicUrl}/cards/newCard`,\n          JSON.stringify(value),\n          {\n            headers: headers,\n          }\n        )\n        .subscribe((data: any) => {\n          console.log(data);\n          this.router.navigate([\n            '/dashboard',\n            this.authService.id,\n            'cards',\n            'all-cards',\n          ]);\n        });\n    }\n  }\n\n  // get all cards\n  async allCards() {\n    await this.getToken();\n\n    const headers = new HttpHeaders()\n    .set('auth-token', `${this.token}`)\n    .set('Authorization', 'my-auth-token')\n    .set('Content-Type', 'application/json');\n    this.allCardsObservable$ = this.authService.http.get(\n      `${this.authService.basicUrl}/cards/allCards`,\n      {\n        headers: headers,\n      }\n    );\n  }\n  // get my cards\n  async getMyCards() {\n    await this.getToken();\n\n    const headers = new HttpHeaders()\n    .set('auth-token', `${this.token}`)\n    .set('Authorization', 'my-auth-token')\n    .set('Content-Type', 'application/json');\n    this.allCardsObservable$ = this.authService.http.get(\n      `${this.authService.basicUrl}/cards/myCards`,\n      {\n        headers: headers,\n      }\n    );\n  }\n\n  // get single card\n  getCardInfo() {\n    console.log(this.cardId);\n\n    const headers = new HttpHeaders()\n    .set('auth-token', `${this.token}`)\n    .set('Authorization', 'my-auth-token')\n    .set('Content-Type', 'application/json');\n    this.cardObservable$ = this.authService.http.get<Cards>(\n      `${this.authService.basicUrl}/cards/${this.cardId}`,\n      {\n        headers: headers,\n      }\n    );\n  }\n\n  // update card\n  updateCard(valid, value) {\n    if (valid) {\n      console.log(this.cardId);\n\n      const headers = new HttpHeaders()\n        .set('auth-token', `${this.token}`)\n        .set('Authorization', 'my-auth-token')\n        .set('Content-Type', 'application/json');\n      this.authService.http\n        .put(\n          `${this.authService.basicUrl}/cards/${this.cardId}`,\n          JSON.stringify(value),\n          {\n            headers: headers,\n          }\n        )\n        .subscribe((data: any) => {\n          console.log(data);\n        });\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './components/dashboard/header/header.component';\nimport { SideNavComponent } from './components/dashboard/side-nav/side-nav.component';\nimport { FooterComponent } from './components/dashboard/footer/footer.component';\nimport { ProfileComponent } from './components/customers/profile/profile.component';\nimport { ProfileEditComponent } from './components/customers/profile-edit/profile-edit.component';\nimport { CardsComponent } from './components/customers/cards/cards.component';\nimport { EditCardsComponent } from './components/customers/edit-cards/edit-cards.component';\nimport { NewCardsComponent } from './components/customers/new-cards/new-cards.component';\nimport { LoginComponent } from './components/auth/login/login.component';\nimport { SubscribeComponent } from './components/auth/subscribe/subscribe.component';\nimport { PageNotFundComponent } from './components/auth/page-not-fund/page-not-fund.component';\nimport { MessagesToUserComponent } from './components/dashboard/messages-to-user/messages-to-user.component';\nimport { ContainerComponent } from './components/dashboard/container/container.component';\nimport { LogOutDirective } from './directives/log-out.directive';\nimport { MyCardsComponent } from './components/customers/my-cards/my-cards.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    SideNavComponent,\n    FooterComponent,\n    ProfileComponent,\n    ProfileEditComponent,\n    CardsComponent,\n    EditCardsComponent,\n    NewCardsComponent,\n    LoginComponent,\n    SubscribeComponent,\n    PageNotFundComponent,\n    MessagesToUserComponent,\n    ContainerComponent,\n    LogOutDirective,\n    MyCardsComponent,\n  ],\n  imports: [BrowserModule, AppRoutingModule, HttpClientModule, FormsModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Customer } from 'src/app/interface/customer';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-subscribe',\n  templateUrl: './subscribe.component.html',\n  styles: [],\n})\nexport class SubscribeComponent implements OnInit {\n  // first reset form\n  form: Customer = {\n    id: '',\n    name: '',\n    email: '',\n    password: '',\n    biz: false,\n  };\n\n  // import the services what need for this component\n  constructor(private authService: AuthService, private http: HttpClient) {}\n\n  // user reset form\n  resetForm(customerForm: NgForm) {\n    customerForm.resetForm({\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n    });\n  }\n\n  // send the form on submit\n  onSubmit({ valid, value }: NgForm) {\n    // go to function what send the value from auth service\n    this.authService.subscribe(valid, value);\n  }\n\n  ngOnInit(): void {}\n}\n","<app-messages-to-user\n  icon=\"fas fa-user-plus\"\n  title=\"form subscribe\"\n  description=\"her you subscribe to her services\"\n></app-messages-to-user>\n\n<div class=\"row\">\n  <div class=\"col-12\">\n    <form\n      #customerForm=\"ngForm\"\n      (ngSubmit)=\"onSubmit(customerForm)\"\n      novalidate=\"novalidate\"\n    >\n      <div class=\"row justify-content-center\">\n        <div class=\"col-md-5 mb-3\">\n          <label for=\"firstName\">\n            <span class=\"text-danger\">*</span> First Name\n          </label>\n          <input\n            type=\"text\"\n            #fN=\"ngModel\"\n            name=\"name\"\n            [(ngModel)]=\"form.name\"\n            id=\"name\"\n            class=\"form-control\"\n            required\n            minlength=\"2\"\n            [ngClass]=\"{\n              'is-valid': fN.touched && fN.valid,\n              'is-invalid': fN.touched && fN.invalid\n            }\"\n            autocomplete=\"name\"\n          />\n          <div *ngIf=\"fN.errors?.required\" class=\"invalid-feedback\">\n            First name is required\n          </div>\n          <div *ngIf=\"fN.errors?.minlength\" class=\"invalid-feedback\">\n            First name must be at least\n            {{ fN.errors?.minlength.requiredLength }} characters long\n          </div>\n        </div>\n\n        <div class=\"col-md-5 mb-3\">\n          <label for=\"email\"> <span class=\"text-danger\">*</span> Email </label>\n          <input\n            type=\"email\"\n            #e=\"ngModel\"\n            name=\"email\"\n            [(ngModel)]=\"form.email\"\n            id=\"email\"\n            class=\"form-control\"\n            required\n            pattern=\"^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$\"\n            [ngClass]=\"{\n              'is-valid': e.touched && e.valid,\n              'is-invalid': e.touched && e.invalid\n            }\"\n            autocomplete=\"email\"\n          />\n          <div *ngIf=\"e.errors?.required\" class=\"invalid-feedback\">\n            Email is required\n          </div>\n          <div *ngIf=\"e.errors?.pattern\" class=\"invalid-feedback\">\n            Please enter a valid email address\n          </div>\n        </div>\n      </div>\n      <div class=\"row justify-content-center\">\n\n        <div class=\"col-md-5 mb-3\">\n          <label for=\"phone\">\n            <span class=\"text-danger\">*</span> password\n          </label>\n          <input\n            type=\"password\"\n            #password=\"ngModel\"\n            name=\"password\"\n            [(ngModel)]=\"form.password\"\n            id=\"password\"\n            class=\"form-control\"\n            required\n            minlength=\"6\"\n            [ngClass]=\"{\n              'is-valid': password.touched && password.valid,\n              'is-invalid': password.touched && password.invalid\n            }\"\n            autocomplete=\"new-password\"\n          />\n          <div *ngIf=\"password.errors?.required\" class=\"invalid-feedback\">\n            password is required\n          </div>\n          <div *ngIf=\"password.errors?.pattern\" class=\"invalid-feedback\">\n            {{ password.errors?.pattern.actualValue }} is not a valid phone\n            number\n          </div>\n        </div>\n\n        <div class=\"col-md-5 mb-3\">\n          <label for=\"phone\">\n            <span class=\"text-danger\">*</span> password\n          </label>\n          <input\n            type=\"radio\"\n            #password=\"ngModel\"\n            name=\"biz\"\n            [(ngModel)]=\"form.biz\"\n            id=\"biz\"\n            class=\"form-control\"\n            value=\"business\"\n          />\n          </div>\n      </div>\n\n      <div class=\"alert-primary p-3 text-center\">\n        <a routerLink=\"/login\" class=\"btn btn-secondary\">login</a>\n\n        <a routerLink=\"/subscribe\" class=\"btn btn-secondary\">Cancel</a>\n        <input\n          type=\"button\"\n          (click)=\"resetForm(customerForm)\"\n          value=\"Reset\"\n          class=\"btn btn-secondary ml-3\"\n        />\n        <input\n          type=\"submit\"\n          [disabled]=\"customerForm.form.invalid\"\n          value=\"Save\"\n          class=\"btn btn-primary ml-3\"\n        />\n      </div>\n    </form>\n  </div>\n</div>\n","import { Directive, HostListener } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Directive({\n  selector: '[appLogOut]'\n})\nexport class LogOutDirective {\n  @HostListener('click', ['$event'])\n  async clickEvent(e: MouseEvent) {\n    e.preventDefault();\n    console.log('is working');\n\n    await this.authService.logOut();\n    this.router.navigate(['/']);\n  }\n  constructor(private authService: AuthService, private router: Router) { }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styles: [\n  ]\n})\nexport class ProfileComponent implements OnInit {\n  user: any;\n  constructor(private authService: AuthService) {\n    this.user = this.authService.user;\n  }\n  ngOnInit(): void {\n  }\n\n}\n","<app-messages-to-user\n  icon=\"fas fa-user\"\n  [title]=\"user.name\"\n  [description]=\"user.email\"\n></app-messages-to-user>","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable, Injector } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Customer } from '../interface/customer';\nimport { CustomerService } from './customer.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  // the user id end user token\n  token: string = '';\n  id: string = '';\n\n  // if the user is logged this go to be true\n  isLogged = false;\n\n  // user info\n  user: any = null;\n\n  // url to deferent path\n  //basic url\n  readonly basicUrl = '/api';\n  // url for login\n  readonly urlLogin = `/dashboard`;\n  //url to subscribe\n  readonly urlSubscribe = '/users/newUser';\n\n  constructor(\n    public router: Router,\n    public http: HttpClient,\n    private injector: Injector\n  ) {}\n\n  // subscribe user\n  subscribe(valid, value) {\n    if (valid) {\n      //  headers\n      const headers = new HttpHeaders()\n        .set('auth-token', `${this.token}`)\n        .set('Authorization', 'my-auth-token')\n        .set('Content-Type', 'application/json');\n      this.http\n        .post<Customer>(\n          `${this.basicUrl}/users/newUser`,\n          JSON.stringify(value),\n          {\n            headers: headers,\n          }\n        )\n        .subscribe((data: any) => {\n          console.log(data);\n          window.localStorage.clear();\n          window.localStorage.removeItem('token');\n          this.router.navigate([``]);\n        });\n    }\n  }\n\n  // login user\n  login(valid, value) {\n    if (valid) {\n      const headers = new HttpHeaders()\n        .set('auth-token', `${this.token}`)\n        .set('Authorization', 'my-auth-token')\n        .set('Content-Type', 'application/json');\n      this.http\n        .post<Customer>(\n          `${this.basicUrl}/auth/loginUser`,\n          JSON.stringify(value),\n          {\n            headers: headers,\n          }\n        )\n        .subscribe((data: any) => {\n          console.log(data);\n\n          window.localStorage.clear();\n          window.localStorage.setItem('user', JSON.stringify(data.user));\n          window.localStorage.setItem('token', data.token);\n          this.getTokenEndNavigate();\n        });\n    }\n  }\n\n  // get token end id end logged to true end navigate\n  getTokenEndNavigate() {\n    this.token = window.localStorage.getItem('token');\n    this.user = JSON.parse(window.localStorage.getItem('user'));\n    this.id = this.user._id;\n    console.log(this.id);\n\n    if (!this.id) {\n      return console.log('error', this.id);\n    }\n    this.isLogged = true;\n\n    console.log(this.urlLogin);\n\n    this.router.navigate([this.urlLogin, this.id, 'profile']);\n  }\n\n   getToken() {\n    this.token = '';\n    this.user = null;\n    this.id = '';\n    this.token = window.localStorage.getItem('token');\n    this.user = JSON.parse(window.localStorage.getItem('user'));\n    this.id = this.user._id;\n    console.log(this.id);\n\n    if (!this.id) {\n      return console.log('error', this.id);\n    }\n  }\n\n  logOut() {\n    let { customerObservable$ } = this.injector.get(CustomerService);\n    customerObservable$ = null;\n    this.isLogged = false;\n    window.localStorage.clear();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Customer } from 'src/app/interface/customer';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { CustomerService } from 'src/app/services/customer.service';\n\n@Component({\n  selector: 'app-profile-edit',\n  templateUrl: './profile-edit.component.html',\n  styles: [],\n})\nexport class ProfileEditComponent implements OnInit {\n  // form from the DB\n  form: Customer;\n\n  // get user info to user card\n  user: any;\n\n  constructor(\n    private authService: AuthService,\n    private customerService: CustomerService\n  ) {\n    this.user = this.authService.user;\n    this.customerService.getCustomerInfo();\n  }\n\n  // send the form on submit\n  onSubmit({ valid, value }: NgForm) {\n    // go to function what send the value from auth service\n    this.customerService.update(valid, value);\n  }\n\n  ngOnInit(): void {\n    // subscribe to the observable to get data\n    if (this.customerService.customerObservable$) {\n      this.customerService.customerObservable$.subscribe((data) => {\n        console.log(data);\n\n        this.form = data;\n      });\n    }\n\n  }\n}\n","<app-messages-to-user\n  icon=\"fas fa-user\"\n  [title]=\"user.name\"\n  [description]=\"user.email\"\n></app-messages-to-user>\n\n<div class=\"row\">\n  <div class=\"col-12\" *ngIf=\"form; else loading\">\n    <form\n      #customerForm=\"ngForm\"\n      (ngSubmit)=\"onSubmit(customerForm)\"\n      novalidate=\"novalidate\"\n    >\n      <div class=\"row justify-content-center\">\n        <div class=\"col-md-5 mb-3\">\n          <label for=\"firstName\">\n            <span class=\"text-danger\">*</span> First Name\n          </label>\n          <input\n            type=\"text\"\n            #fN=\"ngModel\"\n            name=\"name\"\n            [(ngModel)]=\"form.name\"\n            id=\"name\"\n            class=\"form-control\"\n            required\n            minlength=\"2\"\n            [ngClass]=\"{\n              'is-valid': fN.touched && fN.valid,\n              'is-invalid': fN.touched && fN.invalid\n            }\"\n            autocomplete=\"name\"\n          />\n          <div *ngIf=\"fN.errors?.required\" class=\"invalid-feedback\">\n            First name is required\n          </div>\n          <div *ngIf=\"fN.errors?.minlength\" class=\"invalid-feedback\">\n            First name must be at least\n            {{ fN.errors?.minlength.requiredLength }} characters long\n          </div>\n        </div>\n\n        <div class=\"col-md-5 mb-3\">\n          <label for=\"email\"> <span class=\"text-danger\">*</span> Email </label>\n          <input\n            type=\"email\"\n            #e=\"ngModel\"\n            name=\"email\"\n            [(ngModel)]=\"form.email\"\n            id=\"email\"\n            class=\"form-control\"\n            required\n            pattern=\"^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$\"\n            [ngClass]=\"{\n              'is-valid': e.touched && e.valid,\n              'is-invalid': e.touched && e.invalid\n            }\"\n            autocomplete=\"email\"\n          />\n          <div *ngIf=\"e.errors?.required\" class=\"invalid-feedback\">\n            Email is required\n          </div>\n          <div *ngIf=\"e.errors?.pattern\" class=\"invalid-feedback\">\n            Please enter a valid email address\n          </div>\n        </div>\n      </div>\n      <div class=\"row justify-content-center\">\n        <div class=\"col-md-5 mb-3\">\n          <label for=\"phone\">\n            <span class=\"text-danger\">*</span> password\n          </label>\n          <input\n            type=\"password\"\n            #password=\"ngModel\"\n            name=\"password\"\n            [(ngModel)]=\"form.password\"\n            id=\"password\"\n            class=\"form-control\"\n            required\n            minlength=\"6\"\n            [ngClass]=\"{\n              'is-valid': password.touched && password.valid,\n              'is-invalid': password.touched && password.invalid\n            }\"\n            autocomplete=\"new-password\"\n          />\n          <div *ngIf=\"password.errors?.required\" class=\"invalid-feedback\">\n            password is required\n          </div>\n          <div *ngIf=\"password.errors?.pattern\" class=\"invalid-feedback\">\n            {{ password.errors?.pattern.actualValue }} is not a valid phone\n            number\n          </div>\n        </div>\n\n        <div class=\"col-md-5 mb-3\">\n          <label for=\"biz\"> <span class=\"text-danger\">*</span> password </label>\n          <input\n            type=\"radio\"\n            #password=\"ngModel\"\n            name=\"biz\"\n            [(ngModel)]=\"form.biz\"\n            id=\"biz\"\n            class=\"form-control\"\n            value=\"true\"\n          />\n        </div>\n      </div>\n\n      <div class=\"alert-primary p-3 text-center\">\n        <a routerLink=\"/\" class=\"btn btn-secondary\">Cancel</a>\n        <input\n          type=\"submit\"\n          [disabled]=\"customerForm.form.invalid\"\n          value=\"Save\"\n          class=\"btn btn-primary ml-3\"\n        />\n      </div>\n    </form>\n  </div>\n</div>\n\n<ng-template #loading> loading... </ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport { Cards } from 'src/app/interface/cards';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { CordService } from 'src/app/services/cord.service';\n\n@Component({\n  selector: 'app-cards',\n  templateUrl: './cards.component.html',\n  styleUrls: ['./cards.component.scss'],\n})\nexport class CardsComponent implements OnInit {\n  // id for link\n  customerId: string = '';\n\n  // for subscribe to get all cards\n  allCards: Cards[] = [];\n  constructor(\n    private cardService: CordService,\n    private authService: AuthService\n  ) {\n    this.cardService.allCards();\n    this.customerId = this.authService.id;\n    console.log(this.allCards);\n  }\n\n  ngOnInit(): void {\n    // subscribe to get the cards\n    if (this.cardService.allCardsObservable$) {\n      this.cardService.allCardsObservable$.subscribe((data) => {\n        console.log(data);\n\n        this.allCards = data;\n      });\n    }\n  }\n}\n","<app-messages-to-user\n  icon=\"far fa-address-card\"\n  title=\"form subscribe\"\n  description=\"her you subscribe to her services\"\n></app-messages-to-user>\n\n<div class=\"row mt-3\">\n  <div class=\"col-12\">\n    <div *ngIf=\"allCards; else loading\">\n      <div class=\"row\">\n        <div\n          class=\"card col-3 p-2 m-3\"\n          style=\"width: 18rem\"\n          *ngFor=\"let cards of allCards; index as idx\"\n        >\n          <img [src]=\"cards.bizImage\" class=\"card-img-top\" alt=\"...\" />\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">Card title</h5>\n            <p class=\"card-text\">\n              {{ cards.bizDescription }}\n            </p>\n          </div>\n          <ul class=\"list-group list-group-flush\">\n            <li class=\"list-group-item\">{{ cards.bizName | titlecase }}</li>\n            <li class=\"list-group-item\">{{ cards.bizPhone | titlecase }}</li>\n            <li class=\"list-group-item\">{{ cards.bizAddress | titlecase }}</li>\n          </ul>\n          <div class=\"card-body\">\n            <a\n              routerLink=\"/dashboard/{{ customerId }}/cards/{{\n                cards._id\n              }}/edit-card\"\n              class=\"card-link\"\n              >Card edit</a\n            >\n          </div>\n        </div>\n      </div>\n      <ng-template #noCustomers>\n        <p><i>No customers...</i></p>\n      </ng-template>\n    </div>\n\n    <ng-template #loading> loading... </ng-template>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Cards } from 'src/app/interface/cards';\nimport { CordService } from 'src/app/services/cord.service';\n\n@Component({\n  selector: 'app-new-cards',\n  templateUrl: './new-cards.component.html',\n  styles: [],\n})\nexport class NewCardsComponent implements OnInit {\n  // first reset card\n  newCard: Cards = {\n    bizName: '',\n    bizDescription: '',\n    bizAddress: '',\n    bizPhone: '',\n    bizImage: '',\n  };\n\n  constructor(private cardService: CordService) {}\n\n  // create new card\n  onSubmit({ valid, value }: NgForm) {\n    this.cardService.newCard(valid, value);\n  }\n\n  // reset card\n  resetForm(customerForm: NgForm) {\n    customerForm.resetForm({\n      bizName: '',\n      bizDescription: '',\n      bizAddress: '',\n      bizPhone: '',\n      bizImage: '',\n    });\n  }\n\n  ngOnInit(): void {}\n}\n","<app-messages-to-user\n  icon=\"fas fa-user-plus\"\n  title=\"form subscribe\"\n  description=\"her you subscribe to her services\"\n></app-messages-to-user>\n\n<div class=\"row\">\n  <div class=\"col-12\">\n    <form\n      #customerForm=\"ngForm\"\n      (ngSubmit)=\"onSubmit(customerForm)\"\n      novalidate=\"novalidate\"\n    >\n      <div class=\"row justify-content-center\">\n        <div class=\"col-md-5 mb-3\">\n          <label for=\"firstName\">\n            <span class=\"text-danger\">*</span> biz Name\n          </label>\n          <input\n            type=\"text\"\n            #BN=\"ngModel\"\n            name=\"bizName\"\n            [(ngModel)]=\"newCard.bizName\"\n            id=\"bizName\"\n            class=\"form-control\"\n            required\n            minlength=\"2\"\n            [ngClass]=\"{\n              'is-valid': BD.touched && BD.valid,\n              'is-invalid': BD.touched && BD.invalid\n            }\"\n            autocomplete=\"bizName\"\n          />\n          <div *ngIf=\"BD.errors?.required\" class=\"invalid-feedback\">\n            First name is required\n          </div>\n          <div *ngIf=\"BD.errors?.minlength\" class=\"invalid-feedback\">\n            First name must be at least\n            {{ BD.errors?.minlength.requiredLength }} characters long\n          </div>\n        </div>\n\n        <div class=\"col-md-5 mb-3\">\n          <label for=\"bizDescription\">\n            <span class=\"text-danger\">*</span> bizDescription\n          </label>\n          <textarea\n            #BD=\"ngModel\"\n            name=\"bizDescription\"\n            [(ngModel)]=\"newCard.bizDescription\"\n            id=\"bizDescription\"\n            class=\"form-control\"\n            required\n            minlength=\"20\"\n            [ngClass]=\"{\n              'is-valid': BD.touched && BD.valid,\n              'is-invalid': BD.touched && BD.invalid\n            }\"\n            autocomplete=\"bizDescription\"\n          ></textarea>\n\n          <div *ngIf=\"BD.errors?.required\" class=\"invalid-feedback\">\n            bizDescription is required\n          </div>\n          <div *ngIf=\"BD.errors?.minlength\" class=\"invalid-feedback\">\n            bizDescription must be at least\n            {{ BD.errors?.minlength.requiredLength }} characters long\n          </div>\n        </div>\n      </div>\n      <div class=\"row justify-content-center\">\n        <div class=\"col-md-5 mb-3\">\n          <label for=\"bizPhone\">\n            <span class=\"text-danger\">*</span> biz phone\n          </label>\n          <input\n            type=\"text\"\n            #bizPhone=\"ngModel\"\n            name=\"bizPhone\"\n            [(ngModel)]=\"newCard.bizPhone\"\n            id=\"bizPhone\"\n            class=\"form-control\"\n            required\n            minlength=\"6\"\n            [ngClass]=\"{\n              'is-valid': bizPhone.touched && bizPhone.valid,\n              'is-invalid': bizPhone.touched && bizPhone.invalid\n            }\"\n            autocomplete=\"bizPhone\"\n          />\n          <div *ngIf=\"bizPhone.errors?.required\" class=\"invalid-feedback\">\n            bizPhone is required\n          </div>\n          <div *ngIf=\"bizPhone.errors?.pattern\" class=\"invalid-feedback\">\n            {{ bizPhone.errors?.pattern.actualValue }} is not a valid bizPhone\n            number\n          </div>\n        </div>\n\n        <div class=\"col-md-5 mb-3\">\n          <label for=\"bizImage\">\n            <span class=\"text-danger\">*</span> bizImage\n          </label>\n          <input\n            type=\"text\"\n            #bizImage=\"ngModel\"\n            name=\"bizImage\"\n            [(ngModel)]=\"newCard.bizImage\"\n            id=\"bizImage\"\n            class=\"form-control\"\n            required\n            minlength=\"6\"\n            autocomplete=\"bizImage\"\n          />\n        </div>\n\n        <div class=\"col-md-5 mb-3\">\n          <label for=\"bizAddress\">\n            <span class=\"text-danger\">*</span> bizAddress\n          </label>\n          <input\n            type=\"text\"\n            #bizAddress=\"ngModel\"\n            name=\"bizAddress\"\n            [(ngModel)]=\"newCard.bizAddress\"\n            id=\"bizAddress\"\n            class=\"form-control\"\n            required\n            minlength=\"2\"\n            autocomplete=\"bizAddress\"\n          />\n        </div>\n      </div>\n\n      <div class=\"alert-primary p-3 text-center\">\n        <a routerLink=\"/\" class=\"btn btn-secondary\">login</a>\n\n        <input\n          type=\"button\"\n          (click)=\"resetForm(customerForm)\"\n          value=\"Reset\"\n          class=\"btn btn-secondary ml-3\"\n        />\n        <input\n          type=\"submit\"\n          [disabled]=\"customerForm.form.invalid\"\n          value=\"Save\"\n          class=\"btn btn-primary ml-3\"\n        />\n      </div>\n    </form>\n  </div>\n</div>\n","import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Cards } from 'src/app/interface/cards';\nimport { CordService } from 'src/app/services/cord.service';\n\n@Component({\n  selector: 'app-edit-cards',\n  templateUrl: './edit-cards.component.html',\n  styles: [],\n})\nexport class EditCardsComponent implements OnInit {\n  card: Cards = null;\n\n  constructor(\n    private cardService: CordService,\n     activateRoute: ActivatedRoute\n  ) {\n\n    activateRoute.params.subscribe((data: any) => {\n      console.log(data);\n      console.log(data?.id);\n      this.cardService.cardId = data?.id;\n    });\n    this.cardService.getCardInfo();\n  }\n\n  // update card\n  onSubmit({ valid, value }: NgForm) {\n    this.cardService.updateCard(valid, value);\n  }\n\n  ngOnInit(): void {\n    console.log(this.cardService.cardObservable$);\n\n    if (this.cardService.cardObservable$) {\n      this.cardService.cardObservable$.subscribe((data: any) => {\n        console.log(data);\n\n        this.card = data;\n      });\n    }\n  }\n}\n","<app-messages-to-user\n  icon=\"far fa-address-card\"\n  title=\"form subscribe\"\n  description=\"her you subscribe to her services\"\n></app-messages-to-user>\n\n<div class=\"row\">\n  <div class=\"col-12\" *ngIf=\"card; else loading\">\n    <form\n      #customerForm=\"ngForm\"\n      (ngSubmit)=\"onSubmit(customerForm)\"\n      novalidate=\"novalidate\"\n    >\n      <div class=\"row justify-content-center\">\n        <div class=\"col-md-5 mb-3\">\n          <label for=\"firstName\">\n            <span class=\"text-danger\">*</span> biz Name\n          </label>\n          <input\n            type=\"text\"\n            #BN=\"ngModel\"\n            name=\"bizName\"\n            [(ngModel)]=\"card.bizName\"\n            id=\"bizName\"\n            class=\"form-control\"\n            required\n            minlength=\"2\"\n            [ngClass]=\"{\n              'is-valid': BD.touched && BD.valid,\n              'is-invalid': BD.touched && BD.invalid\n            }\"\n            autocomplete=\"bizName\"\n          />\n          <div *ngIf=\"BD.errors?.required\" class=\"invalid-feedback\">\n            First name is required\n          </div>\n          <div *ngIf=\"BD.errors?.minlength\" class=\"invalid-feedback\">\n            First name must be at least\n            {{ BD.errors?.minlength.requiredLength }} characters long\n          </div>\n        </div>\n\n        <div class=\"col-md-5 mb-3\">\n          <label for=\"bizDescription\">\n            <span class=\"text-danger\">*</span> bizDescription\n          </label>\n          <textarea\n            #BD=\"ngModel\"\n            name=\"bizDescription\"\n            [(ngModel)]=\"card.bizDescription\"\n            id=\"bizDescription\"\n            class=\"form-control\"\n            required\n            minlength=\"20\"\n            [ngClass]=\"{\n              'is-valid': BD.touched && BD.valid,\n              'is-invalid': BD.touched && BD.invalid\n            }\"\n            autocomplete=\"bizDescription\"\n          ></textarea>\n\n          <div *ngIf=\"BD.errors?.required\" class=\"invalid-feedback\">\n            bizDescription is required\n          </div>\n          <div *ngIf=\"BD.errors?.minlength\" class=\"invalid-feedback\">\n            bizDescription must be at least\n            {{ BD.errors?.minlength.requiredLength }} characters long\n          </div>\n        </div>\n      </div>\n      <div class=\"row justify-content-center\">\n        <div class=\"col-md-5 mb-3\">\n          <label for=\"bizPhone\">\n            <span class=\"text-danger\">*</span> biz phone\n          </label>\n          <input\n            type=\"text\"\n            #bizPhone=\"ngModel\"\n            name=\"bizPhone\"\n            [(ngModel)]=\"card.bizPhone\"\n            id=\"bizPhone\"\n            class=\"form-control\"\n            required\n            minlength=\"6\"\n            [ngClass]=\"{\n              'is-valid': bizPhone.touched && bizPhone.valid,\n              'is-invalid': bizPhone.touched && bizPhone.invalid\n            }\"\n            autocomplete=\"bizPhone\"\n          />\n          <div *ngIf=\"bizPhone.errors?.required\" class=\"invalid-feedback\">\n            bizPhone is required\n          </div>\n          <div *ngIf=\"bizPhone.errors?.pattern\" class=\"invalid-feedback\">\n            {{ bizPhone.errors?.pattern.actualValue }} is not a valid bizPhone\n            number\n          </div>\n        </div>\n\n        <div class=\"col-md-5 mb-3\">\n          <label for=\"bizImage\">\n            <span class=\"text-danger\">*</span> bizImage\n          </label>\n          <input\n            type=\"text\"\n            #bizImage=\"ngModel\"\n            name=\"bizImage\"\n            [(ngModel)]=\"card.bizImage\"\n            id=\"bizImage\"\n            class=\"form-control\"\n            required\n            minlength=\"6\"\n            autocomplete=\"bizImage\"\n          />\n        </div>\n\n        <div class=\"col-md-5 mb-3\">\n          <label for=\"bizAddress\">\n            <span class=\"text-danger\">*</span> bizAddress\n          </label>\n          <input\n            type=\"text\"\n            #bizAddress=\"ngModel\"\n            name=\"bizAddress\"\n            [(ngModel)]=\"card.bizAddress\"\n            id=\"bizAddress\"\n            class=\"form-control\"\n            required\n            minlength=\"2\"\n            autocomplete=\"bizAddress\"\n          />\n        </div>\n      </div>\n\n      <div class=\"alert-primary p-3 text-center\">\n        <a routerLink=\"/\" class=\"btn btn-secondary\">Home</a>\n        <input\n          type=\"submit\"\n          [disabled]=\"customerForm.form.invalid\"\n          value=\"Save\"\n          class=\"btn btn-primary ml-3\"\n        />\n      </div>\n    </form>\n  </div>\n</div>\n\n<ng-template #loading>\n  <p>loading...</p>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './components/auth/login/login.component';\nimport { PageNotFundComponent } from './components/auth/page-not-fund/page-not-fund.component';\nimport { SubscribeComponent } from './components/auth/subscribe/subscribe.component';\nimport { CardsComponent } from './components/customers/cards/cards.component';\nimport { EditCardsComponent } from './components/customers/edit-cards/edit-cards.component';\nimport { MyCardsComponent } from './components/customers/my-cards/my-cards.component';\nimport { NewCardsComponent } from './components/customers/new-cards/new-cards.component';\nimport { ProfileEditComponent } from './components/customers/profile-edit/profile-edit.component';\nimport { ProfileComponent } from './components/customers/profile/profile.component';\nimport { ContainerComponent } from './components/dashboard/container/container.component';\nimport { AuthGuard } from './guards/auth.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'login',\n    pathMatch: 'full',\n  },\n  { path: 'login', component: LoginComponent, canActivate: [AuthGuard] },\n  {\n    path: 'subscribe',\n    component: SubscribeComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'dashboard/:id',\n    component: ContainerComponent,\n    children: [\n      {\n        path: 'profile',\n        children: [\n          { path: '', component: ProfileComponent, canActivate: [AuthGuard] },\n          {\n            path: 'edit',\n            component: ProfileEditComponent,\n            canActivate: [AuthGuard],\n          },\n        ],\n      },\n      {\n        path: 'cards',\n        children: [\n          {\n            path: 'all-cards',\n            component: CardsComponent,\n            canActivate: [AuthGuard],\n          },\n          {\n            path: 'my-cards',\n            component: MyCardsComponent,\n            canActivate: [AuthGuard],\n          },\n          {\n            path: 'new-cards',\n            component: NewCardsComponent,\n            canActivate: [AuthGuard],\n          },\n          {\n            path: ':id/edit-card',\n            component: EditCardsComponent,\n            canActivate: [AuthGuard],\n          },\n        ],\n      },\n    ],\n  },\n  {\n    path: 'pageNotFund',\n    component: PageNotFundComponent,\n    canActivate: [AuthGuard],\n  },\n  { path: '**', redirectTo: 'pageNotFund', pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styles: [\n  ]\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"alert bg-primary m-0\"></div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}